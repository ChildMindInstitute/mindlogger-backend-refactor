{"uid":"2551ff72f98b8cb9","name":"User Password tests → Recover password tests → \"before all\" hook for \"201 Recover password\"","historyId":"Recover password tests →:\"before all\" hook for \"201 Recover password\"#User Password tests → Recover password tests → \"before all\" hook for \"201 Recover password\"","time":{"start":1734020615000,"stop":1734020615002,"duration":2},"status":"failed","statusMessage":"Invalid URL","statusTrace":"TypeError: Invalid URL\n    at new URL (node:internal/url:806:29)\n    at dispatchHttpRequest (node_modules/axios/lib/adapters/http.js:232:20)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/node_modules/axios/lib/adapters/http.js:152:5\n    at new Promise (<anonymous>)\n    at wrapAsync (node_modules/axios/lib/adapters/http.js:132:10)\n    at http (node_modules/axios/lib/adapters/http.js:170:10)\n    at Axios.dispatchRequest (node_modules/axios/lib/core/dispatchRequest.js:51:10)\n    at Axios._request (node_modules/axios/lib/core/Axios.js:173:33)\n    at Axios.request (node_modules/axios/lib/core/Axios.js:40:25)\n    at Function.wrap [as request] (node_modules/axios/lib/helpers/bind.js:5:15)\n    at UsersController.<anonymous> (api/controllers/base.controller.ts:44:63)\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/api/controllers/base.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (api/controllers/base.controller.ts:4:12)\n    at UsersController.request (api/controllers/base.controller.ts:44:16)\n    at UsersController.<anonymous> (api/controllers/base.controller.ts:23:17)\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/api/controllers/base.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (api/controllers/base.controller.ts:4:12)\n    at UsersController.post (api/controllers/base.controller.ts:29:16)\n    at UsersController.<anonymous> (api/controllers/users.controller.ts:20:17)\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/api/controllers/users.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (api/controllers/users.controller.ts:4:12)\n    at UsersController.createUser (api/controllers/users.controller.ts:19:16)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/tests/api/users/recoverPassword.tests.ts:32:29\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/tests/api/users/recoverPassword.tests.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (tests/api/users/recoverPassword.tests.ts:4:12)\n    at Context.<anonymous> (tests/api/users/recoverPassword.tests.ts:30:23)\n    at processImmediate (node:internal/timers:483:21)\n    at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"Recover password tests →"},{"name":"testClass","value":"\"before all\" hook for \"201 Recover password\""},{"name":"package","value":"\"before all\" hook for \"201 Recover password\""}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":17},"items":[{"uid":"2f800cb4be75c6fd","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/901//#testresult/2f800cb4be75c6fd","status":"failed","statusDetails":"Invalid URL","time":{"start":1733994548000,"stop":1733994548002,"duration":2}},{"uid":"d11fb5a20e2d19c","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/900//#testresult/d11fb5a20e2d19c","status":"failed","statusDetails":"Invalid URL","time":{"start":1733958336000,"stop":1733958336001,"duration":1}},{"uid":"7793532dbad2547f","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/884//#testresult/7793532dbad2547f","status":"failed","statusDetails":"Invalid URL","time":{"start":1733777380000,"stop":1733777380001,"duration":1}},{"uid":"b8e040ae8bc37048","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/876//#testresult/b8e040ae8bc37048","status":"failed","statusDetails":"Cannot read properties of undefined (reading 'token')","time":{"start":1733510361000,"stop":1733510361115,"duration":115}},{"uid":"51a08ecf5ffd7af7","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/874//#testresult/51a08ecf5ffd7af7","status":"failed","statusDetails":"Invalid URL","time":{"start":1733502168000,"stop":1733502168002,"duration":2}},{"uid":"d975e8e88237cf13","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/869//#testresult/d975e8e88237cf13","status":"failed","statusDetails":"Invalid URL","time":{"start":1733430503000,"stop":1733430503001,"duration":1}},{"uid":"95c7393ba31d277a","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/865//#testresult/95c7393ba31d277a","status":"failed","statusDetails":"Invalid URL","time":{"start":1733422338000,"stop":1733422338002,"duration":2}},{"uid":"15b4754ce9b0b1c8","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/810//#testresult/15b4754ce9b0b1c8","status":"failed","statusDetails":"Invalid URL","time":{"start":1731966267000,"stop":1731966267001,"duration":1}},{"uid":"63f49da9abf691cf","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/809//#testresult/63f49da9abf691cf","status":"failed","statusDetails":"Invalid URL","time":{"start":1731966079000,"stop":1731966079002,"duration":2}},{"uid":"f58afc91fa7b2f79","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/767//#testresult/f58afc91fa7b2f79","status":"failed","statusDetails":"Invalid URL","time":{"start":1730152364000,"stop":1730152364001,"duration":1}},{"uid":"30870d80f554683","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/756//#testresult/30870d80f554683","status":"failed","statusDetails":"Invalid URL","time":{"start":1729545565000,"stop":1729545565002,"duration":2}},{"uid":"381f0405608b74e0","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/755//#testresult/381f0405608b74e0","status":"failed","statusDetails":"Invalid URL","time":{"start":1729545362000,"stop":1729545362001,"duration":1}},{"uid":"c4b8160b7bea732e","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/538//#testresult/c4b8160b7bea732e","status":"failed","statusDetails":"Invalid URL","time":{"start":1724957263000,"stop":1724957263001,"duration":1}},{"uid":"4bd6b8240d386f00","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/531//#testresult/4bd6b8240d386f00","status":"failed","statusDetails":"Cannot read properties of undefined (reading 'accessToken')","time":{"start":1724929658000,"stop":1724929658778,"duration":778}},{"uid":"9785227ede3e0783","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/527//#testresult/9785227ede3e0783","status":"failed","statusDetails":"Cannot read properties of undefined (reading 'accessToken')","time":{"start":1724887359000,"stop":1724887359938,"duration":938}},{"uid":"1ecabfe618cd184b","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/522//#testresult/1ecabfe618cd184b","status":"failed","statusDetails":"Cannot read properties of undefined (reading 'accessToken')","time":{"start":1724858024000,"stop":1724858024734,"duration":734}}]},"tags":[]},"source":"2551ff72f98b8cb9.json","parameterValues":[]}