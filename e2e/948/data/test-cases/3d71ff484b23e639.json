{"uid":"3d71ff484b23e639","name":"User Password tests → Password recovery approve tests → After password recovery approve user can login with new password and cannot login with an old one","historyId":"Password recovery approve tests →:After password recovery approve user can login with new password and cannot login with an old one#User Password tests → Password recovery approve tests → After password recovery approve user can login with new password and cannot login with an old one","time":{"start":1736867344000,"stop":1736867344000,"duration":0},"status":"failed","statusMessage":"Invalid URL","statusTrace":"TypeError: Invalid URL\n    at new URL (node:internal/url:806:29)\n    at dispatchHttpRequest (node_modules/axios/lib/adapters/http.js:232:20)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/node_modules/axios/lib/adapters/http.js:152:5\n    at new Promise (<anonymous>)\n    at wrapAsync (node_modules/axios/lib/adapters/http.js:132:10)\n    at http (node_modules/axios/lib/adapters/http.js:170:10)\n    at Axios.dispatchRequest (node_modules/axios/lib/core/dispatchRequest.js:51:10)\n    at Axios._request (node_modules/axios/lib/core/Axios.js:173:33)\n    at Axios.request (node_modules/axios/lib/core/Axios.js:40:25)\n    at Function.wrap [as request] (node_modules/axios/lib/helpers/bind.js:5:15)\n    at UsersController.<anonymous> (api/controllers/base.controller.ts:44:63)\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/api/controllers/base.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (api/controllers/base.controller.ts:4:12)\n    at UsersController.request (api/controllers/base.controller.ts:44:16)\n    at UsersController.<anonymous> (api/controllers/base.controller.ts:23:17)\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/api/controllers/base.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (api/controllers/base.controller.ts:4:12)\n    at UsersController.post (api/controllers/base.controller.ts:29:16)\n    at UsersController.<anonymous> (api/controllers/users.controller.ts:20:17)\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/api/controllers/users.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (api/controllers/users.controller.ts:4:12)\n    at UsersController.createUser (api/controllers/users.controller.ts:19:16)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/tests/api/users/recoverPassword.tests.ts:75:45\n    at Generator.next (<anonymous>)\n    at /home/runner/work/mindlogger-backend-refactor/mindlogger-backend-refactor/tests/api/users/recoverPassword.tests.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (tests/api/users/recoverPassword.tests.ts:4:12)\n    at Context.<anonymous> (tests/api/users/recoverPassword.tests.ts:72:120)\n    at processImmediate (node:internal/timers:483:21)\n    at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"Password recovery approve tests →"},{"name":"testClass","value":"After password recovery approve user can login with new password and cannot login with an old one"},{"name":"package","value":"After password recovery approve user can login with new password and cannot login with an old one"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"7674fb662ee0ead4","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/947//#testresult/7674fb662ee0ead4","status":"failed","statusDetails":"Invalid URL","time":{"start":1736802645000,"stop":1736802645000,"duration":0}},{"uid":"b41dbdf24d008f8d","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/946//#testresult/b41dbdf24d008f8d","status":"failed","statusDetails":"Invalid URL","time":{"start":1736787320000,"stop":1736787320001,"duration":1}},{"uid":"b6833ca4fd343148","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/945//#testresult/b6833ca4fd343148","status":"failed","statusDetails":"Invalid URL","time":{"start":1736525101000,"stop":1736525101001,"duration":1}},{"uid":"e6655c069b895ec1","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/943//#testresult/e6655c069b895ec1","status":"failed","statusDetails":"Invalid URL","time":{"start":1736489613000,"stop":1736489613001,"duration":1}},{"uid":"d049d4a8ed4545c0","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/939//#testresult/d049d4a8ed4545c0","status":"failed","statusDetails":"Invalid URL","time":{"start":1736431324000,"stop":1736431324001,"duration":1}},{"uid":"f8c541e7ceb23d33","reportUrl":"https://ChildMindInstitute.github.io/mindlogger-backend-refactor/e2e/938//#testresult/f8c541e7ceb23d33","status":"failed","statusDetails":"Invalid URL","time":{"start":1736397369000,"stop":1736397369001,"duration":1}}]},"tags":[]},"source":"3d71ff484b23e639.json","parameterValues":[]}