services:

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: mindlogger_postgres
    container_name: mindlogger_postgres
    environment:
      POSTGRES_HOST: ${DATABASE__HOST}
      POSTGRES_PORT: ${DATABASE__PORT}
      POSTGRES_PASSWORD: ${DATABASE__PASSWORD}
      POSTGRES_USER: ${DATABASE__USER}
      POSTGRES_DB: ${DATABASE__DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: mindlogger_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis
    container_name: mindlogger_redis
    ports:
      - "6379:6379"

  app:
    stdin_open: true
    tty: true
    image: mindlogger_backend
    container_name: mindlogger_backend
    build:
      context: .
      dockerfile: ./compose/fastapi/Dockerfile
      args:
        - PIPENV_EXTRA_ARGS=--dev
    entrypoint: /fastapi-entrypoint
    command: /start-backend-datadog
    env_file: .env
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - mailhog
    ports:
      - "8000:80"
    volumes:
      - ./:/app/
#      - /tmp:/tmp
#      - ./uploads/:/app/uploads/

  worker:
    build:
      context: .
      dockerfile: ./compose/fastapi/Dockerfile
#      target: worker
      args:
        - PIPENV_EXTRA_ARGS=--dev
    image: mindlogger_worker
    container_name: mindlogger_worker
    entrypoint: /fastapi-entrypoint
    command: ['/start-worker']
    env_file: .env
    volumes:
      - ./:/app/
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - mailhog

  scheduler:
    build:
      context: .
      dockerfile: ./compose/fastapi/Dockerfile
      target: base
      args:
        - PIPENV_EXTRA_ARGS=--dev
    image: mindlogger_scheduler
    container_name: mindlogger_scheduler
    entrypoint: /fastapi-entrypoint
    command: ['/start-scheduler']
    env_file: .env
    volumes:
      - ./:/app/
    depends_on:
      - postgres
      - redis
      - rabbitmq

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mindlogger_mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

  minio:
    image: minio/minio
    container_name: mindlogger_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioaccess
      MINIO_ROOT_PASSWORD: miniosecret
    volumes:
      - datastore:/data
    command: server --console-address ":9001" /data

  createbuckets:
    image: minio/mc
    container_name: mindlogger_minio_mc
    environment:
      CDN__BUCKET: "${CDN__BUCKET:-media}"
    depends_on:
      - minio
    volumes:
      - './compose/minio:/etc/minio'
    entrypoint: /etc/minio/create_bucket.sh



volumes:
  pg_data: {}
  datastore: {}
