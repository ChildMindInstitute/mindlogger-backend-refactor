name: Automated tests
on:
  workflow_call:
    outputs:
      report-url:
        description: URL to test report
        value: ${{ jobs.publish-report.outputs.report-url }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.23.3'
      - name: "Running tests"
        run: |
          cp .env.default .env
          echo -e "\nRABBITMQ__USE_SSL=False" >> .env
          docker compose up -d
          make dtest

      - name: Collect artifacts
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          if-no-files-found: error

  publish-report:
    name: Publish Report
    needs: [tests]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          ref: gh-pages
          path: gh-pages
        
      - name: Fetch results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Build test report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          # Where allure will write the generated report
          allure_report: unit
          # Results dir -- allure-results
          allure_results: test-results/api
          # Path to folder to be published
          allure_history: allure-history
          # Path to folder where gh-pages was checked out
          gh_pages: gh-pages
          # a subfolder
          subfolder: unit
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # same as allure_history above
          publish_dir: allure-history

      - name: Generate Report URL
        if: always()
        id: report-url
        uses: actions/github-script@v7
        with:
          script: |
            core.setOutput('report-url', 'https://childmindinstitute.github.io/mindlogger-backend-refactor/unit/${{ github.run_number }}')

    outputs:
      report-url: ${{ steps.report-url.outputs.report-url }}

# Notifications moved to parent workflow
#  on-failure:
#    name: Unit tests failed
#    runs-on: ubuntu-latest
#    if: ${{ always() && (needs.tests.result == 'failure' || needs.tests.result == 'timed_out') }}
#    needs:
#      - tests
#    steps:
#      - uses: actions/checkout@v4
#      - name: "Send Slack message on failure"
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_COLOR: failure
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_RESULTS }}
#          SLACK_TITLE: Run Unit Tests
#          SLACK_MESSAGE: 'Error when executing Unit tests!'
#          SLACK_ICON: https://github.com/github.png?size=48
#          MSG_MINIMAL: actions url
#      - name: Fail if tests failed
#        uses: actions/github-script@v7
#        with:
#          script: |
#            core.setFailed('Unit tests failed')
#
#  on-success:
#    name: Unit tests succeeded
#    runs-on: ubuntu-latest
#    if: ${{ always() && (needs.tests.result == 'success') }}
#    needs:
#      - tests
#    steps:
#      - uses: actions/checkout@v4
#      - name: "Send Slack message on success"
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_COLOR: success
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_RESULTS }}
#          SLACK_TITLE: Run Unit Tests
#          SLACK_MESSAGE: 'Unit tests performed successfully!'
#          SLACK_ICON: https://github.com/github.png?size=48
#          MSG_MINIMAL: actions url
