name: Create-RDS-Database

on:
  workflow_run:
    workflows: ["Name-of-Your-Triggering-Workflow"]
    types:
      - completed

jobs:
  create_database:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install PostgreSQL client 16
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        sudo apt-get install -y wget ca-certificates
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install -y postgresql-client-16

    - name: Create Database
      run: |
        PGPASSWORD="${{ secrets.DB_PASSWORD }}" psql -h "${{ secrets.RDS_ENDPOINT }}" -U "${{ secrets.USERNAME }}" -d "${{ secrets.DATABASE_NAME }}" -c "CREATE DATABASE <DATABASE_NAME>;"
    
    - name: Load Database Dump #specify the correct location of the dump
      run: |
        PGPASSWORD="${{ secrets.DB_PASSWORD }}" psql -h "${{ secrets.RDS_ENDPOINT }}" -U "${{ secrets.USERNAME }}" -d "${{ secrets.DATABASE_NAME }}" < ./compose/postgres/public.sql 
  
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.create_database.result == 'failure' || needs.create_database.result == 'timed_out') }}
    needs:
      - create_database
    steps:
      - uses: actions/checkout@v4
      - name: "Send Slack message on failure"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: failure
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_TEST_WORKFLOW }}
          SLACK_TITLE: Create Database
          SLACK_MESSAGE: 'Error during database creation!'
  
  on-success:
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.create_database.result == 'success') }}
    needs:
      - create_database
    steps:
      - uses: actions/checkout@v4
      - name: "Send Slack message on success"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: success
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_TEST_WORKFLOW }}
          SLACK_TITLE: Create Database
          SLACK_MESSAGE: 'The database has been successfully created!'
