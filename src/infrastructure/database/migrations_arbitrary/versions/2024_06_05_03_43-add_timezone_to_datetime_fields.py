"""Add timezone to datetime fields in arbitrary database

Revision ID: 8095e19c1e8b
Revises: f099d463803a
Create Date: 2024-06-05 03:43:10.878950

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '8095e19c1e8b'
down_revision = '267dd5b56abf'
branch_labels = None
depends_on = None

# Tables with `created_at` and `updated_at` columns
general_tables = ['answers', 'answers_items']


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    for table_name in general_tables:
        op.alter_column(
            table_name,
            'created_at',
            existing_type=sa.DateTime(),
            type_=sa.DateTime(timezone=True),
            existing_nullable=False
        )
        op.alter_column(
            table_name,
            'updated_at',
            existing_type=sa.DateTime(),
            type_=sa.DateTime(timezone=True),
            existing_nullable=False
        )
        op.alter_column(
            table_name,
            'migrated_date',
            existing_type=sa.DateTime(),
            type_=sa.DateTime(timezone=True),
            existing_nullable=True
        )
        op.alter_column(
            table_name,
            'migrated_updated',
            existing_type=sa.DateTime(),
            type_=sa.DateTime(timezone=True),
            existing_nullable=True
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    for table_name in general_tables:
        op.alter_column(
            table_name,
            'created_at',
            existing_type=sa.DateTime(timezone=True),
            type_=sa.DateTime(),
            existing_nullable=False
        )
        op.alter_column(
            table_name,
            'updated_at',
            existing_type=sa.DateTime(timezone=True),
            type_=sa.DateTime(),
            existing_nullable=False
        )
        op.alter_column(
            table_name,
            'migrated_date',
            existing_type=sa.DateTime(timezone=True),
            type_=sa.DateTime(),
            existing_nullable=True
        )
        op.alter_column(
            table_name,
            'migrated_updated',
            existing_type=sa.DateTime(timezone=True),
            type_=sa.DateTime(),
            existing_nullable=True
        )
    # ### end Alembic commands ###
