"""events fields updated required

Revision ID: 43ea095c253a
Revises: 4f353d3e56f4
Create Date: 2023-03-21 13:42:30.494473

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "43ea095c253a"
down_revision = "4f353d3e56f4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "events", "start_time", existing_type=postgresql.TIME(), nullable=True
    )
    op.alter_column(
        "events", "end_time", existing_type=postgresql.TIME(), nullable=True
    )
    op.alter_column(
        "events",
        "access_before_schedule",
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.alter_column(
        "events",
        "one_time_completion",
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.alter_column(
        "events", "timer", existing_type=postgresql.INTERVAL(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "events", "timer", existing_type=postgresql.INTERVAL(), nullable=True
    )
    op.alter_column(
        "events",
        "one_time_completion",
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.alter_column(
        "events",
        "access_before_schedule",
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.alter_column(
        "events", "end_time", existing_type=postgresql.TIME(), nullable=True
    )
    op.alter_column(
        "events", "start_time", existing_type=postgresql.TIME(), nullable=True
    )
    # ### end Alembic commands ###
