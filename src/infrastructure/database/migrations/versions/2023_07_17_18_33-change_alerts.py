"""change alerts

Revision ID: bb7daaa5854f
Revises: 150d77d42a08
Create Date: 2023-07-17 18:33:09.688224

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "bb7daaa5854f"
down_revision = "150d77d42a08"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "alerts",
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
    )
    op.add_column("alerts", sa.Column("version", sa.String(), nullable=True))
    op.add_column(
        "alerts",
        sa.Column("activity_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column(
        "alerts",
        sa.Column(
            "activity_item_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
    )
    op.add_column(
        "alerts",
        sa.Column("answer_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.alter_column(
        "alerts",
        "respondent_id",
        existing_type=postgresql.UUID(),
        nullable=True,
    )
    op.drop_constraint(
        "fk_alerts_alert_config_id_alerts_configs",
        "alerts",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_alerts_activity_item_histories_id_version_activity_i_0184",
        "alerts",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_alerts_user_id_users"),
        "alerts",
        "users",
        ["user_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.drop_column("alerts", "activity_item_histories_id_version")
    op.drop_column("alerts", "specific_answer")
    op.drop_column("alerts", "alert_config_id")
    op.drop_table("alerts_configs")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "alerts_configs",
        sa.Column(
            "id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "applet_id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "activity_item_histories_id_version",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "alert_message", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "specific_answer", sa.TEXT(), autoincrement=False, nullable=False
        ),
        sa.Column("viewed", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_item_histories_id_version"],
            ["activity_item_histories.id_version"],
            name="fk_alerts_configs_activity_item_histories_id_version_ac_1c93",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["applet_id"],
            ["applets.id"],
            name="fk_alerts_configs_applet_id_applets",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_alerts_configs"),
    )

    op.add_column(
        "alerts",
        sa.Column(
            "alert_config_id",
            postgresql.UUID(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "alerts",
        sa.Column(
            "specific_answer", sa.TEXT(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "alerts",
        sa.Column(
            "activity_item_histories_id_version",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(
        op.f("fk_alerts_user_id_users"), "alerts", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_alerts_activity_item_histories_id_version_activity_i_0184",
        "alerts",
        "activity_item_histories",
        ["activity_item_histories_id_version"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        "fk_alerts_alert_config_id_alerts_configs",
        "alerts",
        "alerts_configs",
        ["alert_config_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.alter_column(
        "alerts",
        "respondent_id",
        existing_type=postgresql.UUID(),
        nullable=True,
    )
    op.drop_column("alerts", "answer_id")
    op.drop_column("alerts", "activity_item_id")
    op.drop_column("alerts", "activity_id")
    op.drop_column("alerts", "version")
    op.drop_column("alerts", "user_id")
    # ### end Alembic commands ###
