"""Add alerts

Revision ID: d13f5c3d55b5
Revises: 4f353d3e56f4
Create Date: 2023-03-21 17:17:05.562637

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d13f5c3d55b5"
down_revision = "4f353d3e56f4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "alerts_configs",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("applet_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "activity_item_histories_id_version", sa.String(), nullable=False
        ),
        sa.Column("alert_message", sa.String(), nullable=False),
        sa.Column("specific_answer", sa.String(), nullable=False),
        sa.Column("viewed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_item_histories_id_version"],
            ["activity_item_histories.id_version"],
            name=op.f(
                "fk_alerts_configs_activity_item_histories_id_version_activity_item_histories"
            ),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["applet_id"],
            ["applets.id"],
            name=op.f("fk_alerts_configs_applet_id_applets"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_alerts_configs")),
    )
    op.create_table(
        "alerts",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "alert_config_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column(
            "respondent_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column("is_watched", sa.Boolean(), nullable=False),
        sa.Column("applet_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "activity_item_histories_id_version", sa.String(), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["activity_item_histories_id_version"],
            ["activity_item_histories.id_version"],
            name=op.f(
                "fk_alerts_activity_item_histories_id_version_activity_item_histories"
            ),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["alert_config_id"],
            ["alerts_configs.id"],
            name=op.f("fk_alerts_alert_config_id_alerts_configs"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["applet_id"],
            ["applets.id"],
            name=op.f("fk_alerts_applet_id_applets"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["respondent_id"],
            ["users.id"],
            name=op.f("fk_alerts_respondent_id_users"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_alerts")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("alerts")
    op.drop_table("alerts_configs")
    # ### end Alembic commands ###
