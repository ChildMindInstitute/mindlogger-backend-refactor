"""initial

Revision ID: 78748b528e6b
Revises: 
Create Date: 2023-01-18 12:17:37.398182

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "78748b528e6b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "notification_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("device_id", sa.String(), nullable=False),
        sa.Column("action_type", sa.String(), nullable=False),
        sa.Column(
            "notification_descriptions",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "notification_in_queue",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "scheduled_notifications",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "notification_descriptions_updated", sa.Boolean(), nullable=False
        ),
        sa.Column(
            "notifications_in_queue_updated", sa.Boolean(), nullable=False
        ),
        sa.Column(
            "scheduled_notifications_updated", sa.Boolean(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("full_name", sa.String(length=100), nullable=True),
        sa.Column("hashed_password", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "applet_histories",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "about", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("image", sa.String(length=255), nullable=True),
        sa.Column("watermark", sa.String(length=255), nullable=True),
        sa.Column("theme_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.String(length=255), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.Column("report_server_ip", sa.Text(), nullable=True),
        sa.Column("report_public_key", sa.Text(), nullable=True),
        sa.Column(
            "report_recipients",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("report_include_user_id", sa.Boolean(), nullable=True),
        sa.Column("report_include_case_id", sa.Boolean(), nullable=True),
        sa.Column("report_email_body", sa.Text(), nullable=True),
        sa.Column("id_version", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("display_name", sa.String(length=100), nullable=True),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"], ["users.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id_version"),
    )
    op.create_table(
        "applets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("display_name", sa.String(length=100), nullable=True),
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "about", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("image", sa.String(length=255), nullable=True),
        sa.Column("watermark", sa.String(length=255), nullable=True),
        sa.Column("theme_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.String(length=255), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.Column("report_server_ip", sa.Text(), nullable=True),
        sa.Column("report_public_key", sa.Text(), nullable=True),
        sa.Column(
            "report_recipients",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("report_include_user_id", sa.Boolean(), nullable=True),
        sa.Column("report_include_case_id", sa.Boolean(), nullable=True),
        sa.Column("report_email_body", sa.Text(), nullable=True),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"], ["users.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("display_name"),
    )
    op.create_table(
        "reusable_item_choices",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("token_name", sa.String(length=100), nullable=False),
        sa.Column("token_value", sa.Integer(), nullable=False),
        sa.Column("input_type", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id",
            "token_name",
            "token_value",
            "input_type",
            name="_unique_item_choices",
        ),
    )
    op.create_table(
        "themes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("logo", sa.String(length=100), nullable=True),
        sa.Column("background_image", sa.String(length=100), nullable=True),
        sa.Column("primary_color", sa.String(length=100), nullable=True),
        sa.Column("secondary_color", sa.String(length=100), nullable=True),
        sa.Column("tertiary_color", sa.String(length=100), nullable=True),
        sa.Column("public", sa.Boolean(), nullable=True),
        sa.Column("allow_rename", sa.Boolean(), nullable=True),
        sa.Column("creator", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator"], ["users.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "activities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("guid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("splash_screen", sa.Text(), nullable=True),
        sa.Column("image", sa.Text(), nullable=True),
        sa.Column("show_all_at_once", sa.Boolean(), nullable=True),
        sa.Column("is_skippable", sa.Boolean(), nullable=True),
        sa.Column("is_reviewable", sa.Boolean(), nullable=True),
        sa.Column("response_is_editable", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("applet_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["applet_id"], ["applets.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "activity_histories",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("guid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("splash_screen", sa.Text(), nullable=True),
        sa.Column("image", sa.Text(), nullable=True),
        sa.Column("show_all_at_once", sa.Boolean(), nullable=True),
        sa.Column("is_skippable", sa.Boolean(), nullable=True),
        sa.Column("is_reviewable", sa.Boolean(), nullable=True),
        sa.Column("response_is_editable", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("id_version", sa.String(), nullable=False),
        sa.Column("applet_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["applet_id"], ["applet_histories.id_version"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id_version"),
    )
    op.create_table(
        "flow_histories",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("guid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("is_single_report", sa.Boolean(), nullable=True),
        sa.Column("hide_badge", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("id_version", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("applet_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["applet_id"], ["applet_histories.id_version"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id_version"),
    )
    op.create_table(
        "flows",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("guid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("is_single_report", sa.Boolean(), nullable=True),
        sa.Column("hide_badge", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("applet_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["applet_id"], ["applets.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_applet_accesses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("applet_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(
            ["applet_id"], ["applets.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "activity_item_histories",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "question", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("response_type", sa.Text(), nullable=True),
        sa.Column(
            "answers", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("color_palette", sa.Text(), nullable=True),
        sa.Column("timer", sa.Integer(), nullable=True),
        sa.Column("has_token_value", sa.Boolean(), nullable=True),
        sa.Column("is_skippable", sa.Boolean(), nullable=True),
        sa.Column("has_alert", sa.Boolean(), nullable=True),
        sa.Column("has_score", sa.Boolean(), nullable=True),
        sa.Column("is_random", sa.Boolean(), nullable=True),
        sa.Column("is_able_to_move_to_previous", sa.Boolean(), nullable=True),
        sa.Column("has_text_response", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("id_version", sa.String(), nullable=False),
        sa.Column("activity_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activity_histories.id_version"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id_version"),
    )
    op.create_table(
        "activity_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "question", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("response_type", sa.Text(), nullable=True),
        sa.Column(
            "answers", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("color_palette", sa.Text(), nullable=True),
        sa.Column("timer", sa.Integer(), nullable=True),
        sa.Column("has_token_value", sa.Boolean(), nullable=True),
        sa.Column("is_skippable", sa.Boolean(), nullable=True),
        sa.Column("has_alert", sa.Boolean(), nullable=True),
        sa.Column("has_score", sa.Boolean(), nullable=True),
        sa.Column("is_random", sa.Boolean(), nullable=True),
        sa.Column("is_able_to_move_to_previous", sa.Boolean(), nullable=True),
        sa.Column("has_text_response", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"], ["activities.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "flow_item_histories",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("id_version", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("activity_flow_id", sa.String(), nullable=True),
        sa.Column("activity_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_flow_id"],
            ["flow_histories.id_version"],
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activity_histories.id_version"],
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id_version"),
    )
    op.create_table(
        "flow_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("ordering", sa.REAL(), nullable=True),
        sa.Column("activity_flow_id", sa.Integer(), nullable=True),
        sa.Column("activity_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_flow_id"], ["flows.id"], ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["activity_id"], ["activities.id"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("flow_items")
    op.drop_table("flow_item_histories")
    op.drop_table("activity_items")
    op.drop_table("activity_item_histories")
    op.drop_table("user_applet_accesses")
    op.drop_table("flows")
    op.drop_table("flow_histories")
    op.drop_table("activity_histories")
    op.drop_table("activities")
    op.drop_table("themes")
    op.drop_table("reusable_item_choices")
    op.drop_table("applets")
    op.drop_table("applet_histories")
    op.drop_table("users")
    op.drop_table("notification_logs")
    # ### end Alembic commands ###
