"""created_by, updated_by columns

Revision ID: 325e61782765
Revises: 5130eba9f698
Create Date: 2023-12-27 12:44:25.619999

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "325e61782765"
down_revision = "5130eba9f698"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "library",
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column(
        "library",
        sa.Column("updated_by", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.create_foreign_key(
        op.f("fk_library_created_by_users"),
        "library",
        "users",
        ["created_by"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        op.f("fk_library_updated_by_users"),
        "library",
        "users",
        ["updated_by"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.alter_column(
        "themes", "creator_id", existing_type=postgresql.UUID(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "themes", "creator_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.drop_constraint(
        op.f("fk_library_updated_by_users"), "library", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_library_created_by_users"), "library", type_="foreignkey"
    )
    op.drop_column("library", "updated_by")
    op.drop_column("library", "created_by")
    # ### end Alembic commands ###
