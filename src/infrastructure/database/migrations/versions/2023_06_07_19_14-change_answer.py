"""change answer

Revision ID: c7cc15b17084
Revises: 18d4bf0ea62b
Create Date: 2023-06-07 19:14:33.277999

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c7cc15b17084"
down_revision = "18d4bf0ea62b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("delete from answers;")
    op.drop_table("assessment_answer_items")
    op.add_column(
        "answers",
        sa.Column("submit_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column(
        "answers", sa.Column("applet_history_id", sa.String(), nullable=False)
    )
    op.add_column(
        "answers", sa.Column("flow_history_id", sa.String(), nullable=True)
    )
    op.add_column(
        "answers",
        sa.Column("activity_history_id", sa.String(), nullable=False),
    )
    op.create_foreign_key(
        op.f("fk_answers_applet_history_id_applet_histories"),
        "answers",
        "applet_histories",
        ["applet_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        op.f("fk_answers_activity_history_id_activity_histories"),
        "answers",
        "activity_histories",
        ["activity_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        op.f("fk_answers_flow_history_id_flow_histories"),
        "answers",
        "flow_histories",
        ["flow_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.drop_column("answers", "user_public_key")
    op.add_column(
        "answers_items",
        sa.Column(
            "respondent_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
    )
    op.add_column(
        "answers_items", sa.Column("identifier", sa.Text(), nullable=True)
    )
    op.add_column(
        "answers_items", sa.Column("user_public_key", sa.Text(), nullable=True)
    )
    op.add_column(
        "answers_items",
        sa.Column("scheduled_datetime", sa.DateTime(), nullable=True),
    )
    op.add_column(
        "answers_items",
        sa.Column("start_datetime", sa.DateTime(), nullable=False),
    )
    op.add_column(
        "answers_items",
        sa.Column("end_datetime", sa.DateTime(), nullable=False),
    )
    op.add_column(
        "answers_items",
        sa.Column("is_assessment", sa.Boolean(), nullable=True),
    )
    op.drop_constraint(
        "fk_answers_items_activity_history_id_activity_histories",
        "answers_items",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_answers_items_applet_history_id_applet_histories",
        "answers_items",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_answers_items_flow_history_id_flow_histories",
        "answers_items",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_answers_items_respondent_id_users"),
        "answers_items",
        "users",
        ["respondent_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.drop_column("answers_items", "flow_history_id")
    op.drop_column("answers_items", "applet_history_id")
    op.drop_column("answers_items", "activity_history_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "answers_items",
        sa.Column(
            "activity_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "answers_items",
        sa.Column(
            "applet_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "answers_items",
        sa.Column(
            "flow_history_id", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(
        op.f("fk_answers_items_respondent_id_users"),
        "answers_items",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_answers_items_flow_history_id_flow_histories",
        "answers_items",
        "flow_histories",
        ["flow_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        "fk_answers_items_applet_history_id_applet_histories",
        "answers_items",
        "applet_histories",
        ["applet_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        "fk_answers_items_activity_history_id_activity_histories",
        "answers_items",
        "activity_histories",
        ["activity_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.drop_column("answers_items", "is_assessment")
    op.drop_column("answers_items", "end_datetime")
    op.drop_column("answers_items", "start_datetime")
    op.drop_column("answers_items", "scheduled_datetime")
    op.drop_column("answers_items", "user_public_key")
    op.drop_column("answers_items", "identifier")
    op.drop_column("answers_items", "respondent_id")
    op.add_column(
        "answers",
        sa.Column(
            "user_public_key", sa.TEXT(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(
        op.f("fk_answers_flow_history_id_flow_histories"),
        "answers",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_answers_activity_history_id_activity_histories"),
        "answers",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_answers_applet_history_id_applet_histories"),
        "answers",
        type_="foreignkey",
    )
    op.drop_column("answers", "activity_history_id")
    op.drop_column("answers", "flow_history_id")
    op.drop_column("answers", "applet_history_id")
    op.drop_column("answers", "submit_id")
    op.create_table(
        "assessment_answer_items",
        sa.Column(
            "id",
            postgresql.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, now())"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, now())"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "answer_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column("answer", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "applet_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "activity_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "item_ids",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "reviewer_id",
            postgresql.UUID(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "reviewer_public_key",
            sa.TEXT(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_edited", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["activity_history_id"],
            ["activity_histories.id_version"],
            name="fk_assessment_answer_items_activity_history_id_activity_67fc",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["answer_id"],
            ["answers.id"],
            name="fk_assessment_answer_items_answer_id_answers",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["applet_history_id"],
            ["applet_histories.id_version"],
            name="fk_assessment_answer_items_applet_history_id_applet_histories",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["reviewer_id"],
            ["users.id"],
            name="fk_assessment_answer_items_reviewer_id_users",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_assessment_answer_items"),
    )
    # ### end Alembic commands ###
