"""change answer structure

Revision ID: 2345665e47c4
Revises: 0c48e3afead1
Create Date: 2023-05-25 10:49:20.690994

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "2345665e47c4"
down_revision = "0c48e3afead1"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
        delete from answers;
    """)
    op.create_table(
        "answers_items",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', now())"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', now())"),
            nullable=True,
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("answer_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("answer", sa.Text(), nullable=True),
        sa.Column("applet_history_id", sa.String(), nullable=False),
        sa.Column("flow_history_id", sa.String(), nullable=True),
        sa.Column("activity_history_id", sa.String(), nullable=False),
        sa.Column(
            "item_ids", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["activity_history_id"],
            ["activity_histories.id_version"],
            name=op.f(
                "fk_answers_items_activity_history_id_activity_histories"
            ),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["answer_id"],
            ["answers.id"],
            name=op.f("fk_answers_items_answer_id_answers"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["applet_history_id"],
            ["applet_histories.id_version"],
            name=op.f("fk_answers_items_applet_history_id_applet_histories"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["flow_history_id"],
            ["flow_histories.id_version"],
            name=op.f("fk_answers_items_flow_history_id_flow_histories"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_answers_items")),
    )
    op.drop_table("answers_activity_items")
    op.drop_table("answers_flow_items")
    op.add_column(
        "answer_notes",
        sa.Column("activity_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column(
        "answer_notes", sa.Column("user_public_key", sa.Text(), nullable=True)
    )
    op.add_column("answers", sa.Column("version", sa.Text(), nullable=True))
    op.add_column(
        "answers", sa.Column("user_public_key", sa.Text(), nullable=True)
    )
    op.drop_constraint(
        "fk_answers_activity_history_id_activity_histories",
        "answers",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_answers_flow_history_id_flow_histories",
        "answers",
        type_="foreignkey",
    )
    op.drop_column("answers", "flow_history_id")
    op.drop_column("answers", "activity_history_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "answers",
        sa.Column(
            "activity_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "answers",
        sa.Column(
            "flow_history_id", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.create_foreign_key(
        "fk_answers_flow_history_id_flow_histories",
        "answers",
        "flow_histories",
        ["flow_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        "fk_answers_activity_history_id_activity_histories",
        "answers",
        "activity_histories",
        ["activity_history_id"],
        ["id_version"],
        ondelete="RESTRICT",
    )
    op.drop_column("answers", "user_public_key")
    op.drop_column("answers", "version")
    op.drop_column("answer_notes", "user_public_key")
    op.drop_column("answer_notes", "activity_id")
    op.create_table(
        "answers_flow_items",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "respondent_id",
            postgresql.UUID(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "applet_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "applet_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "flow_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "activity_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "activity_item_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("answer", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "answer_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["activity_history_id"],
            ["activity_histories.id_version"],
            name="fk_answers_flow_items_activity_history_id_activity_histories",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["activity_item_history_id"],
            ["activity_item_histories.id_version"],
            name="fk_answers_flow_items_activity_item_history_id_activity_2d25",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["answer_id"],
            ["answers.id"],
            name="fk_answers_flow_items_answer_id_answers",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["applet_history_id"],
            ["applet_histories.id_version"],
            name="fk_answers_flow_items_applet_history_id_applet_histories",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["flow_history_id"],
            ["flow_histories.id_version"],
            name="fk_answers_flow_items_flow_history_id_flow_histories",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["respondent_id"],
            ["users.id"],
            name="fk_answers_flow_items_respondent_id_users",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_answers_flow_items"),
    )
    op.create_table(
        "answers_activity_items",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "respondent_id",
            postgresql.UUID(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "applet_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "applet_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "activity_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "activity_item_history_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("answer", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "answer_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["activity_history_id"],
            ["activity_histories.id_version"],
            name="fk_answers_activity_items_activity_history_id_activity__749d",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["activity_item_history_id"],
            ["activity_item_histories.id_version"],
            name="fk_answers_activity_items_activity_item_history_id_acti_612d",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["answer_id"],
            ["answers.id"],
            name="fk_answers_activity_items_answer_id_answers",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["applet_history_id"],
            ["applet_histories.id_version"],
            name="fk_answers_activity_items_applet_history_id_applet_histories",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["respondent_id"],
            ["users.id"],
            name="fk_answers_activity_items_respondent_id_users",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_answers_activity_items"),
    )
    op.drop_table("answers_items")
    # ### end Alembic commands ###
